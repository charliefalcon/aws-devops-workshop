AWSTemplateFormatVersion: 2010-09-09


Parameters:
  Key:
    Description: Key files parameters
    Type: "AWS::EC2::KeyPair::KeyName"

Resources:
 BookstoreSecGr:
  Type: "AWS::EC2::SecurityGroup"
  Properties:
    GroupDescription: Allows SSH and HTTP #required
    SecurityGroupIngress:
    - IpProtocol: tcp
      FromPort: 80
      ToPort: 80
      CidrIp: 0.0.0.0/0
    - IpProtocol: tcp
      FromPort: 22
      ToPort: 22
      CidrIp: 0.0.0.0/0        
 DockerInstance:
  Type: "AWS::EC2::Instance"
  Properties:
    ImageId: ami-0947d2ba12ee1ff75
    InstanceType: t2.micro
    KeyName: !Ref Key
    SecurityGroupIds:
      - !Ref BookstoreSecGr
    Tags:
     - Key: "Name"
       Value: !Sub Web Server of ${AWS::StackName} Stack
    
    UserData: 
      Fn::Base64: 
        !Sub |
          #!/bin/bash
          yum update -y
          amazon-linux-extras install docker -y
          systemctl start docker
          systemctl enable docker
          usermod -a -G docker ec2-user
          curl -L "https://github.com/docker/compose/releases/download/1.27.4/docker-compose-$(uname -s)-$(uname -m)" \
          -o /usr/local/bin/docker-compose


          chmod +x /usr/local/bin/docker-compose
          mkdir api-bookstore
          cd api-bookstore 
          wget https://raw.githubusercontent.com/charliefalcon/aws-devops-workshop/master/devops/projects/201-dockerization-bookstore-api-on-python-flask-mysql/api-bookstore/bookstore-api.py
          wget https://raw.githubusercontent.com/charliefalcon/aws-devops-workshop/master/devops/projects/201-dockerization-bookstore-api-on-python-flask-mysql/api-bookstore/docker-compose.yaml
          wget https://raw.githubusercontent.com/charliefalcon/aws-devops-workshop/master/devops/projects/201-dockerization-bookstore-api-on-python-flask-mysql/api-bookstore/dockerfile
          wget https://raw.githubusercontent.com/charliefalcon/aws-devops-workshop/master/devops/projects/201-dockerization-bookstore-api-on-python-flask-mysql/api-bookstore/requirements.txt
          service docker start
          docker-compose up -d


Outputs:
  WebSiteURL:
    Description: URL for application
    Value: !Join [ "://", [ "http", !GetAtt DockerInstance.PublicDnsName ] ]


    